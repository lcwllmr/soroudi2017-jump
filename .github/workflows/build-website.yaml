# This workflow is a slightly adapted version of
#   https://github.com/JuliaPluto/static-export-template
# 

name: build website

# triggered on pushes to main, specifically whenever notebooks or the readme change
on:
  push:
    branches:
      - main
    paths:
      - '*.jl'
      - 'README.md'

# when two jobs run in parallel cancel the older ones to make sure that the website is generated from the most recent commit
concurrency:
  group: build-website
  cancel-in-progress: true

# action needs permission to write HTML files to the gh-pages branch
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout this repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive' # make sure submodules are pulled, too 

      - name: install julia
        uses: julia-actions/setup-julia@v2
        with:
          version: "1.11" # this will pick the latest Julia 1.11.x version

      - name: cache Julia artifacts & such
        uses: julia-actions/cache@v2
        with:
          cache-registries: "true"

      # set up a folder that Pluto can use to cache exported notebooks
      - name: set up notebook state cache
        uses: actions/cache@v4
        with:
          path: pluto_state_cache
          key: |
            ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('.github/workflows/*' ) }}-${{ hashFiles('*.jl') }}
          restore-keys: |
            ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('.github/workflows/*' ) }}

      - name: ignore notebook state cache in export
        run: echo 'pluto_state_cache' >> .gitignore

      - name: run & export pluto notebooks
        run: |
          julia -e 'using Pkg
            Pkg.activate(mktempdir())
            Pkg.add([
              Pkg.PackageSpec(name="PlutoSliderServer", version="1.3"),
            ])
            using PlutoSliderServer
            github_action(".";
              Export_cache_dir="pluto_state_cache",
              Export_baked_notebookfile=false,
              Export_baked_state=false,
            )'

      - name: export repo readme as index
        run: |
          julia -e 'using Pkg
            Pkg.add([
              Pkg.PackageSpec(name="Weave", version="0.10")
            ])
            using Weave
            weave("./README.md",
              out_path="./index.html",
              doctype="md2html",
              template="./index.template.html",
              css="./github-markdown-css/github-markdown.css")
          '

      - name: deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: .
          single-commit: true

